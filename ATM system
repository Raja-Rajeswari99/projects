
ATM [ Console Based ]

1. withdraw
2. Deposit
3. Pin Generation
4. Mini statement

bank = {
    101 : ["Sai Vardhan","2408",10000,[24,8,1995]],
    102 : ["vikram",None,20000,[23,9,2005]] ,
    103 : ["vignesh","9876",0,[11,1,1900]]
}
while True:
  print("Choose the required option: ")
  print("1. Withdraw")
  print("2. Deposit")
  print("3. Pin Generation")
  print("4. Mini statement")
  print("5. Exit")
  n = int(input())
  if n == 1:
    print("******************************")
    print("Withdraw")
    accno = int(input("Enter your account number: "))
    if accno not in bank:
      print("Invalid Account number")
    else:
      print(f"Welcome {bank[accno][0]}")
      pin = input("Enter your Pin: ")
      if pin != bank[accno][1]:
        print("Invalid Pin")
      else:
        amt = int(input("Enter amount to withdraw: "))
        if amt > bank[accno][2]:
          print("Insufficient Balance")
        else:
          bank[accno][2] = bank[accno][2] - amt
          print("Withdraw Successfull")
    print("******************************")
  elif n == 2:
    print("******************************")
    print("Deposit")
    accno = int(input("Enter your account number: "))
    if accno not in bank:
      print("Invalid Account number")
    else:
      print(f"Welcome {bank[accno][0]}")
      pin = input("Enter your Pin: ")
      if pin != bank[accno][1]:
        print("Invalid Pin")
      else:
        amt = int(input("Enter amount to Deposit: "))
        bank[accno][2] = bank[accno][2] + amt
        print("Deposit Successfull")
    print("******************************")
  elif n == 3:
    print("******************************")
    print("Pin Generation")
    accno = int(input("Enter your account number: "))
    if accno not in bank:
      print("Invalid Account number")
    else:
      print(f"Welcome {bank[accno][0]}")
      if bank[accno][1] != None:
        print("Pin already generated")
      else:
        print("Verify Date of Birth: ")
        date = int(input("Enter Birth Date: "))
        month = int(input("Enter Birth Month: "))
        year = int(input("Enter Birth Year: "))
        if date == bank[accno][3][0] and month == bank[accno][3][1] and year == bank[accno][3][2]:
          pin = input("Enter your new Pin:")
          cpin = input("Confirm your Pin: ")
          if pin != cpin:
            print("Incorrect pin entered, try again")
          else:
            bank[accno][1] = pin
            print("Pin Generated Sucessfully !")
        else:
          print("Incorrect Date of Birth Details")
          print("Try again !")
    print("******************************")
  elif n == 4:
    print("******************************")
    print("Mini statement")
    accno = int(input("Enter your account number: "))
    if accno not in bank:
      print("Invalid Account number")
    else:
      print(f"Welcome {bank[accno][0]}")
      pin = input("Enter Your Pin: ")
      if pin != bank[accno][1]:
        print("Invalid Pin")
      else:
        print(f"Balance: {bank[accno][2]}")
    print("******************************")
  else:
    print("******************************")
    print("thank You")
    print("visit again")
    print("******************************")
    break
     
Choose the required option: 
1. Withdraw
2. Deposit
3. Pin Generation
4. Mini statement
5. Exit
4
******************************
Mini statement
Enter your account number: 101
Welcome Sai Vardhan
Enter Your Pin: 2408
Balance: 10000
******************************
Choose the required option: 
1. Withdraw
2. Deposit
3. Pin Generation
4. Mini statement
5. Exit
---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
<ipython-input-9-54f0d18c7cee> in <cell line: 6>()
     11   print("4. Mini statement")
     12   print("5. Exit")
---> 13   n = int(input())
     14   if n == 1:
     15     print("******************************")

/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py in raw_input(self, prompt)
    849                 "raw_input was called, but this frontend does not support input requests."
    850             )
--> 851         return self._input_request(str(prompt),
    852             self._parent_ident,
    853             self._parent_header,

/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py in _input_request(self, prompt, ident, parent, password)
    893             except KeyboardInterrupt:
    894                 # re-raise KeyboardInterrupt, to truncate traceback
--> 895                 raise KeyboardInterrupt("Interrupted by user") from None
    896             except Exception as e:
    897                 self.log.warning("Invalid Message:", exc_info=True)

KeyboardInterrupt: Interrupted by user
Linkedin Upload

ATM - Console Based Project
Technologies Used:
    1. Control Statements
    2. Conditional Statements
    3. Dictionary
    4. Variables
    5. Operations
    6. Lists
Description:
    In this project, I involved various operations in ATM like Withdrawal, Deposit, Pin Generation, Mini statements etc,..
Tools:
    Google Colab
